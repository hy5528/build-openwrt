name: 玩客云OpenWrt
run-name: ${{ inputs.device }}

on:
  workflow_dispatch:
    inputs:
      lan_ip:
        description: '设置LAN IP地址'
        required: true
        default: '192.168.2.158'
        
      device:
        description: '请输入设备型号'
        required: true
        default: 'thunder-onecloud'

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Free disk space
      uses: coder-xiaomo/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential clang flex bison g++ gawk \
        gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
        python3-setuptools rsync swig unzip zlib1g-dev file wget \
        llvm python3-pyelftools libpython3-dev aria2 jq qemu-utils ccache rename \
        libelf-dev device-tree-compiler libgmp3-dev libmpc-dev libfuse-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    - name: Clone source code
      run: |
        git clone -b v24.10.0 https://github.com/openwrt/openwrt && cp -r files openwrt && chmod 755 -R openwrt/files && cat feeds.buildinfo >>openwrt/feeds.conf.default
        cat openwrt/feeds.conf.default

    - name: Load onecloud
      run: |
        mv target/linux/amlogic openwrt/target/linux
        chmod -Rf 755 openwrt/target/linux/amlogic
        

    - name: Update feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: 设置LAN IP地址（路由器登录地址）
      run: |
        cd openwrt
        SET_IP=${{ github.event.inputs.lan_ip }}
        #修改默认IP地址
        sed -i "s/192\.168\.[0-9]*\.[0-9]*/$SET_IP/g" package/base-files/files/bin/config_generate
        echo "Set LAN IP Address: $SET_IP"
        
    - name: Load custom configuration
      run: |
        target_device=$(grep -m 1 "^config TARGET_.*$(echo ${{ inputs.device }} | xargs)" openwrt/tmp/.config-target.in)
        if [ -z "$target_device" ]; then
          echo "Error: The ${{ inputs.device }} device you input does not exist!"
          exit 1
        fi
        DEVICE_NAME=$(echo $target_device | awk -F "DEVICE_" '{print $2}')
        cat <<EOF >openwrt/.config
        CONFIG_TARGET_$(echo $target_device | awk -F "_" '{print $2}')=y
        CONFIG_TARGET_$(echo $target_device | awk -F "_" '{print $2}')_$(echo $target_device | awk -F "_" '{print $3}')=y
        CONFIG_TARGET_$(echo $target_device | awk -F "_" '{print $2}')_$(echo $target_device | awk -F "_" '{print $3}')_DEVICE_${DEVICE_NAME}=y
        CONFIG_LUCI_LANG_zh_Hans=y
        EOF
        cat config.buildinfo >>openwrt/.config && cat openwrt/.config
        echo "DEVICE_NAME=${DEVICE_NAME}" >> $GITHUB_ENV

    - name: Generate configuration file
      run: cd openwrt && make defconfig && make download -j16

    - name: Compile firmware
      run: |
        cd openwrt
        make -j$(nproc) || make -j1 V=s

    - name: 制作直刷包
      run: |
        chmod +x gen_burn_img.sh
        chmod +x AmlImg
        $GITHUB_WORKSPACE/gen_burn_img.sh

    - name: 整理固件
      id: organize
      run: |
        cd openwrt
        mkdir outfile
        cp -rf bin/targets/*/*/*.xz ./outfile
        cp -rf .config ./outfile/config.txt
        rm -rf bin/targets/*/*/packages
        
        cd outfile
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV

    - name: Get current Beijing time
      id: get_time
      run: echo "BEIJING_TIME=$(TZ=Asia/Shanghai date +'%Y%m%d_%H%M%S')" >> $GITHUB_ENV

    - name: Upload firmware to workflow directory
      uses: actions/upload-artifact@main
      with:
        name: ${{ env.DEVICE_NAME }}-firmware-${{ env.BEIJING_TIME }}
        path: ${{ env.FIRMWARE }}
    - name: Upload to release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: Onecloud
        append_body: true
        body_path: ${{ env.FIRMWARE }}
        files: |
          openwrt/outfile/*
