name: Onecloud生成直刷版

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      upload_artifacts:
        description: '上传固件'
        required: true
        default: 'false'
        type: boolean
      upload_release:
        description: '上传到Release'
        required: true
        default: 'true'
        type: boolean

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set variables
        run: |
          if [[ "${{ github.event.inputs.upload_artifacts }}" == 'true' ]]; then
            echo "UPLOAD_ARTIFACTS=true" >> $GITHUB_ENV
          else
            echo "UPLOAD_ARTIFACTS=false" >> $GITHUB_ENV
          fi
          if [[ "${{ github.event.inputs.upload_release }}" == 'true' ]]; then
            echo "UPLOAD_RELEASE=true" >> $GITHUB_ENV
          else
            echo "UPLOAD_RELEASE=false" >> $GITHUB_ENV
          fi

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git build-essential debootstrap

      - name: Build Armbian
        run: |
          mkdir -p build
          mkdir -p build/output
          mkdir -p build/output/images
          chmod -R 777 build
          cd build/output/images
          wget https://github.com/teasiu/armbian-onecloud/releases/download/ci-20221125-203039-UTC/Armbian_22.11.0-trunk_Onecloud_jammy_legacy_5.10.156.img.xz
          unxz Armbian_22.11.0-trunk_Onecloud_jammy_legacy_5.10.156.img.xz
          

      - name: 安装依赖项
        run: |
          sudo apt install android-sdk-libsparse-utils
          ver="v0.3.2"
          curl -L -o ./AmlImg https://github.com/rmoyulong/AmlImg/releases/download/$ver/AmlImg_${ver}_linux_amd64
          chmod +x ./AmlImg
      - name: 下载并解压最新的 u-boot
        run: |
          echo "::group::Download"
          curl -L -o ./uboot.img https://github.com/rmoyulong/u-boot-onecloud/releases/download/Onecloud_Uboot_23.12.24_18.15.09/eMMC.burn.img
          echo "::endgroup::"
          
          echo "::group::Unpack"
          ./AmlImg unpack ./uboot.img burn/
          echo "::endgroup::"
      - name: 提取boot和rootfs分区
        run: |
          diskimg=$(ls build/output/images/*.img)
          loop=$(sudo losetup --find --show --partscan $diskimg)
          sudo img2simg ${loop}p1 burn/boot.simg
          sudo img2simg ${loop}p2 burn/rootfs.simg
          sudo losetup -d $loop
          sudo chown $(id -u):$(id -g) -R burn/
      - name: 生成刻录映像
        run: |
          echo -n "sha1sum $(sha1sum burn/boot.simg | awk '{print $1}')" >burn/boot.VERIFY
          echo -n "sha1sum $(sha1sum burn/rootfs.simg | awk '{print $1}')" >burn/rootfs.VERIFY
          
          cat <<EOF >>burn/commands.txt
          PARTITION:boot:sparse:boot.simg
          VERIFY:boot:normal:boot.VERIFY
          PARTITION:rootfs:sparse:rootfs.simg
          VERIFY:rootfs:normal:rootfs.VERIFY
          EOF
          
          prefix=$(ls build/output/images/*.img | sed 's/\.img$//')
          burnimg=${prefix}.burn.img
          ./AmlImg pack $burnimg burn/
      - name: 进行哈希处理和压缩
        run: |
          mkdir -p imageupload
          for f in build/output/images/*.img; do
            xz --threads=0 --compress "$f"
          done
          
          mv build/output/images/*.xz imageupload
          
      - name: 提取版本号
        run: |  
          # 提取版本号
          # latest_image=$(ls imageupload/Armbian-unofficial_*.burn.img.xz | grep -oE 'Armbian-unofficial_[0-9.]+_.*' | sort -V | tail -n 1) 
          latest_image=$(ls imageupload/Armbian-unofficial_*.burn.img.xz | sort -V | tail -n 1)
          version=$(echo "$latest_image" | cut -d'_' -f 2)  
  
          # 将版本号设置为环境变量  
          echo "version=$version" >> $GITHUB_ENV
          
      - name: 生成标签，上传固件
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.CORE_TAG }}
          #append_body: true
          files: |
            imageupload/*
          body: | 
            ====================🧊固件信息🧊=======================
            ➦ 💻 固件源码：https://github.com/armbian/build
            ➦ 💝 源码分支：${{ github.event.inputs.BRANCH_TYPE }}
            ➦ 🚀 编译版本：${{ env.version }}
            ➦ 🌐 默认用户：root
            ➦ 🔑 默认密码：1234

      - name: Create Release Tag
        if: env.UPLOAD_RELEASE == 'true'
        run: |
          echo "release_tag=$(date +%Y%m%d)" >> $GITHUB_ENV

      - name: Upload artifacts
        if: env.UPLOAD_ARTIFACTS == 'true'
        uses: actions/upload-artifact@main
        with:
          name: armbian-image
          path: ./build/output/images/*.xz

      - name: Upload to release
        if: env.UPLOAD_RELEASE == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.release_tag }}
          name: Armbian ${{ env.release_tag }}
          files: ./build/output/images/*.xz
